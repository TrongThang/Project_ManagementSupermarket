<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_ExportPDF.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KUwAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="MaHD.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="MaNV.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="MaKH.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="NgayLapHD.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="TongTien.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="TienKhachDua.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="TienTraKhach.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="MaHD.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="MaNV.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="MaKH.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="NgayLapHD.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="TongTien.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="TienKhachDua.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="TienTraKhach.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>